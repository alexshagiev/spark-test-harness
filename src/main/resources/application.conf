conf {
    spark {
        appname = "test-harness"
        # https://issues.apache.org/jira/browse/SPARK-29077 - when running on mac os you might need to change localhost to your actual host name until this is resolved.
        master = "spark://localhost:7077"
        # master = "local[8]"
    }
    hdfs {
        url = "hdfs://localhost:9000"
        base-dir = /user/test-harness
        l0-dir = ${conf.hdfs.base-dir}/data/l0
        l1-dir = ${conf.hdfs.base-dir}/data/l1
    }
}

scenarios {
    #run = {jsonl : [ short]}
    run = {jsonl : [very-short, short, long, very-long, very-long-and-wide, extra-long, extra-long-and-wide]}
    jsonl {
        l0-dir = ${conf.hdfs.l0-dir}/jsonl
        l1-dir = ${conf.hdfs.l1-dir}/jsonl
        very-short {
            rows = 100
            columns = 100
            # determines if every row will be unique or same values will be repeated across several rows
            rows_uniqueness_factor = 1
            name = very-short_rows_${scenarios.jsonl.very-short.rows}_columns_${scenarios.jsonl.very-short.columns}.jsonl
        }
        short {
            rows = 1000
            columns = 100
            # determines if every row will be unique or same values will be repeated across several rows
            rows_uniqueness_factor = 1
            name = short_rows_${scenarios.jsonl.short.rows}_columns_${scenarios.jsonl.short.columns}.jsonl
        }
        long {
            rows = 10000
            columns = 100
            # determines if every row will be unique or same values will be repeated across several rows
            rows_uniqueness_factor = 10
            name = long_rows_${scenarios.jsonl.long.rows}_columns_${scenarios.jsonl.long.columns}.jsonl
        }
        very-long {
            rows = 100000
            columns = 100
            rows_uniqueness_factor = 100000/100
            name = very-long_rows_${scenarios.jsonl.very-long.rows}_columns_${scenarios.jsonl.very-long.columns}.jsonl
        }
        very-long-and-wide {
            rows = 100000
            columns = 1000
            rows_uniqueness_factor = 100000/10
            name = very-long-and-wide_rows_${scenarios.jsonl.very-long-and-wide.rows}_columns_${scenarios.jsonl.very-long-and-wide.columns}.jsonl
        }
        extra-long {
            rows = 1000000
            columns = 100
            rows_uniqueness_factor = 1000000/10000
            name = extra-long_rows_${scenarios.jsonl.extra-long.rows}_columns_${scenarios.jsonl.extra-long.columns}.jsonl
        }
        extra-long-and-wide {
            rows = 1000000
            columns = 1000
            rows_uniqueness_factor = 1000000/100
            name = extra-long-and-wide_rows_${scenarios.jsonl.extra-long-and-wide.rows}_columns_${scenarios.jsonl.extra-long-and-wide.columns}.jsonl
        }
    }

}